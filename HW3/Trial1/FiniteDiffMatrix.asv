function P = FiniteDiffMatrix(filter, diagonalPosition, n)
    % This is a smart function that is going to construct the differential
    % matrix for you, assumning a periodic boundary conditions. It will
    %
    % Filter: 
    %   This is the finite differnce coefficients. SHOULD BE ROW VECTOR.
    %
    % diagonalPosition: 
    %   This represent where the finite different coefficients is applied
    %   to the sampled points.
    
    e = ones(n, 1);
    P = spdiags(e.*filter, diagonalPosition, n, n);
    spy(P);
    
    PeriodicRepeat = diagonalPosition; 
    NewDiag        = zeros(size(filter));
    
    for I = 1: size(NewDiag, 1)
       if diagonaPosition < 0
           NewDiag = n + diagonalPosition(I)
       else
       end
       
    end
    
end